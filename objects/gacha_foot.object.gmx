<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gacha_icon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///prepare
//c: character ID 
state = n0;
r = irandom_range(-30, 30);
a = irandom_range(0,359);;

worker_portrait = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///script
switch(state){
    case 0:
        depth=20;
        if(mouse_check_button_pressed(mb_left)){if(mouse_x&gt;=x-80 &amp;&amp; mouse_y &gt;= y-80 &amp;&amp; mouse_x&lt;=x+80 &amp;&amp; mouse_y&lt;=y+80){
            state=n1;
            func_sound_click();
            //fx
            var s = n0; if(global.worker_star[|c] &gt; n2){s=n1;}
            repeat(n2*n6){
                var fx = instance_create(x,y,anim_flash_fix);
                fx.size = random_range(0.25,1);
                if(s == n0) {fx.col = c_white;} else {fx.col = c_yellow;}
            }
        }}
        //draw
        draw_sprite_ext(spr_gacha_icon,n3,x,y,1,1,r,c_white,1);
        break;
    case 1:
        depth=20;
        var s = n0;
        if(global.worker_star[|c] &gt; n2){
            s=n1;
            //yellow ssr shaft
            if(a&lt;360){a+=0.25}else{a=n0;}
            var ad = abs(cos(a));
            draw_sprite_ext(spr_flash,0,x,y,1,1,0,c_yellow,ad);
        }
        //click
        if(mouse_check_button_pressed(mb_left)){
            if(mouse_x&gt;=x-80 &amp;&amp; mouse_y &gt;= y-80 &amp;&amp; mouse_x&lt;=x+80 &amp;&amp; mouse_y&lt;=y+80){
                state=n2;
                func_sound_click();
                //load sprite
                var portraitFile = "p/" + string(c)+ "_0.png";       
                worker_portrait = sprite_add(portraitFile, 1, false, false, 0, 0);
                //fx
                var fcol = c_white; if(s&gt;n0){fcol = c_yellow;}
                repeat(n2*n6){
                    var fx = instance_create(irandom_range(240,480),irandom_range(240,960),anim_flash);
                    fx.size = random_range(0.25,1);
                    fx.col = fcol;
                }
                var ff = instance_create(0,0,anim_fade_in);
                ff.time = 15;
                ff.color = fcol;
            }
        }
        //draw
        draw_sprite_ext(spr_gacha_icon,s,x,y,1,1,r,c_white,1);
        break;
    case 2:
        depth=5;
        //click
        if(mouse_check_button_pressed(mb_left)){
            state=n3;
            func_sound_click();
            global.gacha_clicked++; //count clicked
            //delete portrait
            sprite_delete(worker_portrait);
        }
        //draw
        draw_sprite_ext(spr_gacha_icon,n2,x,y,1,1,r,c_white,1);
        //draw_dim
        draw_set_colour(c_black);
        draw_set_alpha(0.5);
        draw_rectangle(0,0,720,1200,false);
        draw_set_alpha(1);
        draw_set_colour(c_white);
        //draw_portrait
        draw_sprite_ext(worker_portrait, 0,0,40,0.666667,0.666667,0,c_white,1);
        //draw_star
        draw_sprite_ext(spr_star, global.worker_star[|c] - n1, 360, 980, 3,3,0,c_white,1);
        //draw-text
        draw_shadowed_text_ext(360,1120,global.txt_gacha_get,global.font, fa_middle, fa_center, c_white,20,1200, 1.5,1.5,0);
        break;
    case 3:
        depth=20;
        //draw
        draw_sprite_ext(spr_gacha_icon,n2,x,y,1,1,r,c_white,1);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
