<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_team</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///prepare
state=n0;
stime=n0;
select=n0;//chosen worker position (for choosing a new worker)
//portrait
var i = n0; while(i&lt;=n3){
     worker_pt [i] = -n1;
i++;}
event_perform(ev_other,ev_user0);
//save game first
game_save_data();
//choose start map at home
global.map_file = "home";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fetch_portrait
var i = n0; while(i&lt;=n3){
    //remove
    if(worker_pt [i] &gt; -n1){
        sprite_delete(worker_pt [i]);
        worker_pt [i] = -n1;
    }
    //fetch
    var w = global.team[#global.map_team,i];
    var ptF = "pl/" + string(ds_map_find_value(global.work[|w],ID)) + "_" + string(ds_map_find_value(global.work[|w],SKN))+".png";
    if(file_exists(ptF)){
        worker_pt [i] = sprite_add(ptF, 1, false, false, 0,0);
    }
i++}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///script
//anim
var dy = func_dy(stime,45);
if(state==n0){
    if(stime&lt;45){stime++;}
    //click
    else if(mouse_check_button_released(mb_left)){if(!(instance_exists(ui_home))&amp;&amp;!(instance_exists(ui_dialog))){
        //close
        if(point_in_rectangle(mouse_x,mouse_y,400,dy+1040,640,dy+1160)){func_sound_click();
            global.map_file="";//reset chosen map
            state=n1;
        }
        //prev
        else if(point_in_rectangle(mouse_x,mouse_y,20,dy+930,140,dy+990)){func_sound_click();
            if(global.map_team&gt;n0){
                global.map_team--;
                event_perform(ev_other,ev_user0);
            }
        }
        //next
        else if(point_in_rectangle(mouse_x,mouse_y,580,dy+930,720,dy+990)){func_sound_click();
            if(global.map_team&lt;n7){
                global.map_team++;
                event_perform(ev_other,ev_user0);
            }
        }
        //go
        else if(point_in_rectangle(mouse_x,mouse_y,80,dy+1040,320,dy+1160)){func_sound_click();
            if(func_team_verify()==n0){
                //not enough worker
                global.map_file="";//reset chosen map
                var de = instance_create(0,0,ui_dialog_alert);
                de.text=global.txt_team_insufficient;
                de.buttontext=global.txt_ok;
            }
            state=n1;
        }
        //select worker
        else if(mouse_y&gt;=120&amp;&amp;mouse_y&lt;=760){func_sound_click();
            select = clamp(floor((mouse_x-40)/160),0,3);
            //remove
            if(func_team_get_worker(global.map_team,select)&gt;-n1){
                func_team_remove_worker(global.map_team,select);
            }
            //set
            else{
                var u = instance_create(0,0,ui_home);
                u.team=id;
            }
        }
    }}
}
else{
    if(stime&gt;0){stime--;}
    else {
        //goto game
        if(global.map_file!=""){
            //setup worker
            var mapFile = global.map_file;
            global.map_file = "";
            func_gameplay_init();
            global.map_file = mapFile;
            //go
            room_goto(room_game);
        }
        else{instance_destroy();}
    }
    //draw_fade_out
    if(global.map_file!=""){
        draw_set_colour(c_black);
        draw_set_alpha((45-stime)/45);
        draw_rectangle(0,0,720,1200,false);
        draw_set_colour(c_white);
        draw_set_alpha(1);
    }
}
//draw_dim
draw_dim(stime,45);
//draw_bottom
draw_sprite(spr_team,1,0,dy);
//draw_center
draw_sprite(spr_team,0,0,dy);
//draw workers
var i=0;repeat(4){
    var w = func_team_get_worker(global.map_team,i);
    var wX = 40+(160*i);
    var wY = dy+120;
    var wB = n0;
    if(w&gt;-1){
        var wID = ds_map_find_value(global.work[|w],ID);
        var wSKN= ds_map_find_value(global.work[|w],SKN);
        draw_sprite_part(worker_pt [i], wSKN, global.worker_team_portrait_xcoor[wID,wSKN], global.worker_team_portrait_ycoor[wID,wSKN], 160,640, wX, wY);
        wB = global.worker_star[|wID];
        //tool
        var wTool = ds_map_find_value(global.work[|w],TOOL);
        if(wTool&gt;-1){
            draw_sprite_ext(spr_tool,ds_map_find_value(global.tool[|wTool],ID), wX+80, dy+830, 1.25,1.25, 0, c_white, 1); 
        }
    }
    //border
    draw_sprite_ext(spr_team_border, wB, wX, wY, 1,1,0,c_white,1);
i++;}
//draw labels
//i=0; repeat(4){
//    draw_sharp_text(120+160*(i),dy+80,(i+1),global.font,fa_middle,fa_center,c_black);
//i++;}
//draw_team_text
draw_sharp_text_ext(360,dy+60,global.txt_team+string(global.map_team+1),global.font,fa_middle,fa_top,c_black,0,720,1.1,1.1,0);
//draw_top
draw_sprite(spr_team,2,0,dy);
//draw_go_text
draw_shadowed_text(360,dy+965,global.txt_team_go,global.font,fa_middle,fa_center,c_black);
//draw_yes_no
draw_sharp_text(200,dy+1080,global.txt_yes,global.font,fa_middle,fa_top,c_black);

draw_sharp_text(520,dy+1080,global.txt_no,global.font,fa_middle,fa_top,c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
